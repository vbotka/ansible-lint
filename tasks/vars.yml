---

- name: Declare mal_owner when undefined
  when: mal_owner is undefined
  block:

    - name: "Vars: Get the user"
      become: false
      ansible.builtin.setup:
        gather_subset: user

    - name: "Vars: Debug user mal_debug={{ mal_debug }}"
      when: mal_debug | bool
      ansible.builtin.debug:
        msg: |
          ansible_user: {{ ansible_user | d('UDEFINED') }}
          ansible_user_id: {{ ansible_user_id | d('UDEFINED') }}

    - name: "Vars: Declare mal_owner"
      ansible.builtin.set_fact:
        mal_owner: "{{ ansible_user | d(ansible_user_id) }}"

- name: "Vars: Include OS vars"
  vars:
    al_os_vars_path: "{{ ansible_parent_role_paths.0 }}"
  ansible.builtin.include_role:  # noqa: var-naming[no-role-prefix]
    name: vbotka.ansible_lib
    tasks_from: al_include_os_vars_path

- name: "Vars: Override mal_packages"
  when: mal_packages_override is defined
  ansible.builtin.set_fact:
    mal_packages: "{{ mal_packages_override }}"

- name: "Vars: Override mal_pip_executable"
  when: mal_pip_executable_override is defined
  ansible.builtin.set_fact:
    mal_pip_executable: "{{ mal_pip_executable_override }}"

- name: "Vars: Override mal_pip_requirements"
  when: mal_pip_requirements_override is defined
  ansible.builtin.set_fact:
    mal_pip_requirements: "{{ mal_pip_requirements_override }}"

# EOF
