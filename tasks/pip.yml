---

# TODO: Still open?
# The pip module always set to changed when using check mode #62826
# https://github.com/ansible/ansible/issues/62826

# Note 1.
# The pip module isn't always idempotent #28952
# https://github.com/ansible/ansible/issues/28952
# The isssue was closed. See the Conclusion

- name: Install Ansible Lint PyPI packages for mal_owner
  block:

    - name: "Pip: Install Ansible Lint PyPI packages for {{ mal_owner }}"
      become_user: "{{ mal_owner }}"
      become: true
      register: result
      changed_when: result.changed
      ansible.builtin.pip:
        name: "{{ item.name }}"
        executable: "{{ mal_pip_executable }}"
        extra_args: "{{ mal_pip_extraagrs | d(omit) }}"
        version: "{{ item.version | d(omit) }}"
        state: "{{ item.state | d(omit) }}"
      loop: "{{ mal_pip_packages }}"
      until: result is succeeded
      retries: "{{ pip_install_retries }}"
      delay: "{{ pip_install_delay }}"

    - name: "Pip: Debug PyPI packages mal_debug={{ mal_debug }}"
      when: mal_debug | bool
      ansible.builtin.debug:
        var: result

  rescue:

    - name: "Pip: Rescue PyPI packages"
      ansible.builtin.fail:
        msg: |
          [ERR] task {{ ansible_failed_task.name }} failed.
          ansible_failed_task:
            {{ ansible_failed_task | to_yaml(indent=2) | indent(2) }}
          ansible_failed_result:
            {{ ansible_failed_result | to_yaml(indent=2) | indent(2) }}

- name: Install Ansible Lint PyPI requirements for mal_owner
  block:

    - name: "Pip: Install Ansible Lint pip requirements for {{ mal_owner }}"
      when: mal_pip_requirements | length > 0
      become_user: "{{ mal_owner }}"
      become: true
      register: result
      changed_when: result.changed
      ansible.builtin.pip:
        requirements: "{{ mal_pip_requirements }}"
        executable: "{{ mal_pip_executable }}"
        extra_args: "{{ pip_extraagrs | d(omit) }}"
      until: result is succeeded
      retries: "{{ pip_install_retries }}"
      delay: "{{ pip_install_delay }}"

    - name: "Pip: Debug PyPI requirements mal_debug={{ mal_debug }}"
      when: mal_debug | bool
      ansible.builtin.debug:
        var: result

  rescue:

    - name: "Pip: Rescue PyPI requirements"
      ansible.builtin.fail:
        msg: |
          [ERR] task {{ ansible_failed_task.name }} failed.
          ansible_failed_task:
            {{ ansible_failed_task | to_yaml(indent=2) | indent(2) }}
          ansible_failed_result:
            {{ ansible_failed_result | to_yaml(indent=2) | indent(2) }}

# EOF
